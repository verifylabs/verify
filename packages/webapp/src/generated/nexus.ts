/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type { Context } from './../graphql/context';
import type { core } from 'nexus';
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(
      fieldName: FieldName,
      opts?: core.CommonInputFieldConfig<TypeName, FieldName>
    ): void; // "DateTime";
    json<FieldName extends string>(
      fieldName: FieldName,
      opts?: core.CommonInputFieldConfig<TypeName, FieldName>
    ): void; // "JSON";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(
      fieldName: FieldName,
      ...opts: core.ScalarOutSpread<TypeName, FieldName>
    ): void; // "DateTime";
    json<FieldName extends string>(
      fieldName: FieldName,
      ...opts: core.ScalarOutSpread<TypeName, FieldName>
    ): void; // "JSON";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  DataInput: {
    // input type
    data: NexusGenScalars['JSON']; // JSON!
    signature: string; // String!
  };
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
  JSON: any;
}

export interface NexusGenObjects {
  Link: {
    // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['LinkData']; // LinkData!
    id: string; // String!
    signature: string; // String!
  };
  LinkData: {
    // root type
    address: string; // String!
    redirect: string; // String!
    short: string; // String!
  };
  Mutation: {};
  OpenGraph: {
    // root type
    description: string; // String!
    image: NexusGenScalars['JSON']; // JSON!
    title: string; // String!
  };
  Profile: {
    // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['ProfileData']; // ProfileData!
    id: string; // String!
    signature: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  };
  ProfileData: {
    // root type
    address: string; // String!
    profilePicture?: string | null; // String
    username?: string | null; // String
  };
  Query: {};
  Report: {
    // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['ReportData']; // ReportData!
    id: string; // String!
    signature: string; // String!
  };
  ReportData: {
    // root type
    short: string; // String!
    url: string; // String!
  };
  ReportInfo: {
    // root type
    reports: number; // Int!
  };
  SessionData: {
    // root type
    address?: string | null; // String
    date?: string | null; // String
  };
  SessionPayload: {
    // root type
    data?: NexusGenRootTypes['SessionData'] | null; // SessionData
    token?: string | null; // String
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars;

export interface NexusGenFieldTypes {
  Link: {
    // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['LinkData']; // LinkData!
    id: string; // String!
    openGraph: NexusGenRootTypes['OpenGraph'] | null; // OpenGraph
    signature: string; // String!
  };
  LinkData: {
    // field return type
    address: string; // String!
    redirect: string; // String!
    short: string; // String!
  };
  Mutation: {
    // field return type
    createLink: NexusGenRootTypes['Link']; // Link!
    profile: NexusGenRootTypes['Profile']; // Profile!
    report: NexusGenRootTypes['ReportInfo'] | null; // ReportInfo
    signin: NexusGenRootTypes['SessionPayload'] | null; // SessionPayload
    signout: NexusGenRootTypes['SessionPayload'] | null; // SessionPayload
  };
  OpenGraph: {
    // field return type
    description: string; // String!
    image: NexusGenScalars['JSON']; // JSON!
    title: string; // String!
  };
  Profile: {
    // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['ProfileData']; // ProfileData!
    id: string; // String!
    signature: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  };
  ProfileData: {
    // field return type
    address: string; // String!
    profilePicture: string | null; // String
    username: string | null; // String
  };
  Query: {
    // field return type
    link: NexusGenRootTypes['Link'] | null; // Link
    links: NexusGenRootTypes['Link'][]; // [Link!]!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    reportInfo: NexusGenRootTypes['ReportInfo'] | null; // ReportInfo
    searchLinks: NexusGenRootTypes['Link'][]; // [Link!]!
    session: NexusGenRootTypes['SessionPayload'] | null; // SessionPayload
  };
  Report: {
    // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    data: NexusGenRootTypes['ReportData']; // ReportData!
    id: string; // String!
    signature: string; // String!
  };
  ReportData: {
    // field return type
    short: string; // String!
    url: string; // String!
  };
  ReportInfo: {
    // field return type
    reports: number; // Int!
  };
  SessionData: {
    // field return type
    address: string | null; // String
    date: string | null; // String
  };
  SessionPayload: {
    // field return type
    data: NexusGenRootTypes['SessionData'] | null; // SessionData
    token: string | null; // String
  };
}

export interface NexusGenFieldTypeNames {
  Link: {
    // field return type name
    createdAt: 'DateTime';
    data: 'LinkData';
    id: 'String';
    openGraph: 'OpenGraph';
    signature: 'String';
  };
  LinkData: {
    // field return type name
    address: 'String';
    redirect: 'String';
    short: 'String';
  };
  Mutation: {
    // field return type name
    createLink: 'Link';
    profile: 'Profile';
    report: 'ReportInfo';
    signin: 'SessionPayload';
    signout: 'SessionPayload';
  };
  OpenGraph: {
    // field return type name
    description: 'String';
    image: 'JSON';
    title: 'String';
  };
  Profile: {
    // field return type name
    createdAt: 'DateTime';
    data: 'ProfileData';
    id: 'String';
    signature: 'String';
    updatedAt: 'DateTime';
  };
  ProfileData: {
    // field return type name
    address: 'String';
    profilePicture: 'String';
    username: 'String';
  };
  Query: {
    // field return type name
    link: 'Link';
    links: 'Link';
    profile: 'Profile';
    reportInfo: 'ReportInfo';
    searchLinks: 'Link';
    session: 'SessionPayload';
  };
  Report: {
    // field return type name
    createdAt: 'DateTime';
    data: 'ReportData';
    id: 'String';
    signature: 'String';
  };
  ReportData: {
    // field return type name
    short: 'String';
    url: 'String';
  };
  ReportInfo: {
    // field return type name
    reports: 'Int';
  };
  SessionData: {
    // field return type name
    address: 'String';
    date: 'String';
  };
  SessionPayload: {
    // field return type name
    data: 'SessionData';
    token: 'String';
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    createLink: {
      // args
      input: NexusGenInputs['DataInput']; // DataInput!
    };
    profile: {
      // args
      input: NexusGenInputs['DataInput']; // DataInput!
    };
    report: {
      // args
      input: NexusGenInputs['DataInput']; // DataInput!
    };
    signin: {
      // args
      input: NexusGenInputs['DataInput']; // DataInput!
    };
  };
  Query: {
    link: {
      // args
      short: string; // String!
    };
    links: {
      // args
      address?: string | null; // String
    };
    profile: {
      // args
      address?: string | null; // String
      username?: string | null; // String
    };
    reportInfo: {
      // args
      short?: string | null; // String
      url?: string | null; // String
    };
    searchLinks: {
      // args
      redirect?: string | null; // String
    };
    session: {
      // args
      token?: string | null; // String
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
